generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id                         String                 @id @default(cuid())
  email                      String?                @unique
  password                   String?
  emailVerified              DateTime?
  image                      String?
  name                       String?
  organisedTrips             Trip[]                 @relation("OrganiserToTrip")
  likedPotenialAccoms        PotentialAccom[]       @relation("LikesAccom")
  likedPotentialDestinations PotentialDestination[] @relation("LikesDest")
  memberOfTrips              Trip[]                 @relation("MembersToTrip")
}

model Trip {
  id                   String                 @id @default(cuid())
  name                 String
  dates                String?
  finalised            Boolean                @default(false)
  organiserId          String
  votingStage          String                 @default("none")
  moodboardAccoms      PotentialAccom[]
  moodboardTrips       PotentialDestination[] @relation("MoodboardTrips")
  organiser            User                   @relation("OrganiserToTrip", fields: [organiserId], references: [id], onDelete: Cascade)
  members              User[]                 @relation("MembersToTrip")
  chosenDestination    PotentialDestination?  @relation("ChosenDestination", fields: [chosenDestinationId], references: [id])
  chosenDestinationId  String?                @unique
  potentialDestination PotentialDestination[]
  chosenAccomodation   PotentialAccom?        @relation("ChosenAccomodation", fields: [chosenAccomodationId], references: [id])
  chosenAccomodationId String?                @unique
}

model PotentialDestination {
  id             String   @id @default(cuid())
  tripId         String
  city           String
  country        String
  photoUrl       String?
  description    String?
  activities     String[]
  trip           Trip     @relation(fields: [tripId], references: [id], onDelete: Cascade)
  likedBy        User[]   @relation("LikesDest")
  moodboardTrips Trip[]   @relation("MoodboardTrips")
  chosenByTrip   Trip?    @relation("ChosenDestination")
}

model PotentialAccom {
  id           String @id @default(cuid())
  tripId       String
  photoUrl     String
  description  String
  airBnbUrl    String
  trip         Trip   @relation(fields: [tripId], references: [id], onDelete: Cascade)
  likedBy      User[] @relation("LikesAccom")
  chosenByTrip Trip?  @relation("ChosenAccomodation")
}
